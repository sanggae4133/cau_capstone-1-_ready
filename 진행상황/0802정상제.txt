# 회원 관리 예제 - 백엔드 개발
    일반적인 웹 애플리케이션 계층 구조 : 컨트롤러 > 서비스 > 레포 > DB // > 도메인
    컨트롤러: 웹 MVC의 컨트롤러 역할
    서비스: 핵심 비즈니스 로직 구현
    리포지토리: 데이터베이스에 접근, 도메인 객체를 DB에 저장하고 관리
    도메인: 비즈니스 도메인 객체, 예) 회원, 주문, 쿠폰 등등 주로 데이터베이스에 저장하고 관리됨

    개발한 기능을 실행해서 테스트 할 때 자바의 main 메서드를 통해서 실행하거나, 웹 애플리케이션의 컨트롤러를 통해서 해당 기능을 실행
    자바는 JUnit이라는 프레임워크로 테스트를 실행

    @AfterEach : 한번에 여러 테스트를 실행하면 메모리 DB에 직전 테스트의 결과가 남을 수 있음
    이렇게 되면 다음 이전 테스트 때문에 다음 테스트가 실패할 가능성이 있음
    @AfterEach 를 사용하면 각 테스트가 종료될 때 마다 이 기능을 실행

# 스프링 빈과의 의존관계
    생성자에 @Autowired 가 있으면 스프링이 연관된 객체를 스프링 컨테이너에서 찾아서 넣어줌
    이렇게 객체 의존관계를 외부에서 넣어주는 것을 DI (Dependency Injection), 의존성 주입이라 함

    스프링 빈을 등록하는 2가지 방법
    1. 컴포넌트 스캔과 자동 의존관계 설정
    2. 자바 코드로 직접 스프링 빈 등록하기

